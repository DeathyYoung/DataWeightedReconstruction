Unification-based grammar formalisms use structures containing sets of features to describe linguistic objects
Although computational algorithms for unification of feature structures have been worked out in experimental research, these algorithms become quite complicated, and a more precise description of feature structures is desirable
Unification is attractive, because of its generality, but it is often computationally inefficient
In the context of computational linguistics, one commonly used [5] logic for feature trees is the propositional modal logic that, in the context of feature structures (not n ecessarily trees), is also often supplemented with path-equivalence [50], as well as regular expressions [34]
In Section 2 we dene a formal syntax and semantics of feature terms with parametrized sorts which are a straightforward generalization of the feature logic presented in [Smo88, Smo89], which in turn is inspired by [KR86] and [Joh88]
There have been several proposal for a formal specication of feature structures, one of the most influential being [KR86], where the semantics of feature descriptions, possibly consisting of atoms, features, conjunction, disjunction, and path equivalences is dened relative to the domain of feature structures, which are labeled graphs
Semantic networks continued to evolve as a representation formalism (Lehmann 1992) and formed the basis of attribute value formalisms, such as feature structures (Kasper & Rounds 1986; Carpenter 1992), Ïˆ-types (Ait-Kaci 1984), and terminological subsumption languages (Brachman & Schmolze 1985)
Because we employ disjunctions to describe the covariation between edges and successor states, one might assume that the complexity of our treatment is already exponential for the DFA case as a result of the fact that the satisfiability problem for disjunctive formulae is A/P-complete [9], thus a unification algorithm will have a non-polynomial complexity, assuming that P r AlP
Kasper and Rounds (1986) show general disjunctive unification to be intractable, since it involves an exponentially complex step of expansion to disjunctive normal form
The feature description logic (FDL) of Kasper and Rounds [Kas86] provides a coherent framework to give a precise interpretation for conditional descriptions
Feature algebras are a generalization of the usual feature structures as formalized for example as a special kind of nite automata in [KR86]
Work on overcoming this limitation is currently in progress, and builds on the well-known similarity between feature structures and automata, when viewed as directed graphs (Kasper & Rounds, 1986)
The most widely known model of feature structures and constraint language is the one developed to explain disjunctive feature values by Kasper and Rounds (1986, 1990) and Kasper (1986, 1987)
The problem is less severe for disjunction, since now we have to consider enumeration only over the alternatives in the disjunction, but it is enough to make the evaluation problem for unification with disjunction NP-complete [24]
There is a natural interpretation of feature structure descriptions as terms over a language with variables [35], as finite-state automata [24], or as rooted directed acyclic graphs, in which arcs are marked with labels and nodes correspond to values which are themselves directed acyclic graphs [33]
