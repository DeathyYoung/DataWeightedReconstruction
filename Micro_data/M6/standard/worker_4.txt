Unification-based grammar formalisms use structures containing sets of features to describe linguistic objects
Although computational algorithms for unification of feature structures have been worked out in experimental research, these algorithms become quite complicated, and a more precise description of feature structures is desirable
We have developed a model in which descriptions of feature structures can be regarded as logical formulas, and interpreted by sets of directed graphs which satisfy them
These graphs are, in fact, transition graphs for a special type of deterministic finite automation
Feature structures are easy-to-understand forms, while logical formulas have merits such as providing a way to perform unification precisely [6]
In Section 2 we dene a formal syntax and semantics of feature terms with parametrized sorts which are a straightforward generalization of the feature logic presented in [Smo88, Smo89], which in turn is inspired by [KR86] and [Joh88]
Semantic networks continued to evolve as a representation formalism (Lehmann 1992) and formed the basis of attribute value formalisms, such as feature structures (Kasper & Rounds 1986; Carpenter 1992), ψ-types (Ait-Kaci 1984), and terminological subsumption languages (Brachman & Schmolze 1985)
Kasper and Rounds (1986) show general disjunctive unification to be intractable, since it involves an exponentially complex step of expansion to disjunctive normal form
The reductions presented in Kasper and Rounds (1986) and Johnson (1988) can be used to show that the problem is NP-hard, so the satisfiability problem for feature constraints with set-values (as defined above) is NP-complete
The notion of functional uncertainty, in common with other linguistic feature structures, uses an address system based on regular languages (Kasper & Rounds, 1986)
Instead of providing entities in the interpretation that serve as the denotation for "disjunctive" or "negative" features, we follow Kasper and Rounds (1986, 1990), Moshier and Rounds (1987), and Johnson (1988, 1990) in permitting disjunction and negation only in the constraint language
Semantic networks continued to evolve as a representation formalism (Lehmann 1992) and formed the basis of attribute value formalisms, such as feature structures (Kasper & Rounds 1986; Carpenter 1992), ψ-types (Ait-Kaci 1984), and terminological subsumption languages (Brachman & Schmolze 1985)
The subsumption ordering between feature structures [13, 28, 6] is omnipresent in linguistic theories like HPSG (head-driven phrase structure grammar) [23]
The structures that terms denote are the finite state automata (actually equivalence classes containing such automata; for details, we refer to Moshier [1988] for a discussion about these structures) as defined by Kasper and Rounds (1986) and used in defining the satisfiability of formulae in their logic
the section on feature structures and HPSG) is extended by adding functional dependencies (functionally dependent values; for a motivation, cf
