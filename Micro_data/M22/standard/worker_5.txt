We introduce a new approach to planning in STRIPS-like domains based on con- structing and analyzing a compact structure we call a Planning Graph
Graphplan always returns a shortest- possible partial-order plan, or states that no valid plan exists
We provide empirical evidence in favor of this approach, showing that Graphplan outperforms the total-order planner, Prodigy, and the partial-order planner, UCPOP, on a variety of interesting natural and artificial planning problems
We also give empir- ical evidence that the plans produced by Graphplan are quite sensible
Since searches made by this approach are fundamentally different from the searches of other common planning methods, they provide a new perspective on the planning problem
The use of domain-independent planners [16], [17], [18] is a promising direction for automated behavior generation
Certain applications in robotic path planning used plan graphs (Blum & Furst, 1997) to compute an estimate of the resources and time required to achieve goals from states encountered in the search process
The action graph data structure was initially defined as a particular class of subgraphs of the planning graph representation [3], and subsequently it has been modified and extended for representing temporal information [15,17]
Most importantly, the weak plan represents the optimistic shortest backbone path to the goal because Graphplan always returns the shortest path, i
These plan constraints thus, should not be confused with the mutex constraints (p, q) [11] that express a constraint over the truth of p and q at the same time point
Namely we exploit the technique developed in previous sections in solving planning problems over planning graphs by the GraphPlan algorithm [8]
Graph based planning Graph based planning utilizes planning graph [1] as a heuristic to constrain the search for plans
The heuristics presented here are based on the well-known technique of computing a relaxed planning graph(Hoffmann and Nebel, 2001), which is the graph that would be generated by GRAPHPLAN (Blum and Furst, 1997) on the STRIPS relaxed planning instance that ignores negative effects
Graphplan (Blum and Furst 1997) and Blackbox (Kautz and Selman 1997) have introduced two fundamental concepts to planning with discrete actions
Graphplan [2] is a general-purpose planner for STRIPS-like domains, which exploits the benefits of graph algorithms in order to reduce search space and provide better solutions
